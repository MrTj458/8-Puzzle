{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12280\viewh14580\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
/******************************************************************************\
 *  Name:   Trevor Hodsdon\
 *  Partner Name:       Jacob Ombach\
 ******************************************************************************/\
\
Programming Assignment 4: Slider Puzzle\
\
\
/******************************************************************************\
 *  Explain briefly how you implemented the Board data type.\
 *****************************************************************************/\
\
\
\
\
/******************************************************************************\
 *  Explain briefly how you represented a search node\
 *  (board + number of moves + previous search node).\
 *****************************************************************************/\
We created a SearchNode class that takes in all of the fields in the constructor.\
\
\
\
\
\
\
/******************************************************************************\
 *  Explain briefly how you detected unsolvable puzzles.\
 *\
 *  What is the order of growth of the running time of your isSolvable()\
 *  method as function of the board size n? Recall that with order-of-growth\
 *  notation, you should discard leading coefficients and lower-order terms,\
 *  e.g., n log n or n^3.\
\
 *****************************************************************************/\
\
description:\
We checked the number of inversions and compared them to what was said in the video.\
\
\
\
\
\
Order of growth of running time:\
 N^2\
\
\
/******************************************************************************\
 *  For each of the following instances, give the minimum number of moves to\
 *  solve the instance (as reported by your program). Also, give the amount\
 *  of time your program takes with both the Hamming and Manhattan priority\
 *  functions. If your program can't solve the instance in a reasonable\
 *  amount of time (say, 5 minutes) or memory, indicate that instead. Note\
 *  that your program may be able to solve puzzle[xx].txt even if it can't\
 *  solve puzzle[yy].txt even if xx > yy.\
 *****************************************************************************/\
\
\
                 min number          seconds\
     instance     of moves     Hamming     Manhattan\
   ------------  ----------   ----------   ----------\
   puzzle28.txt  28	       2 sec       < 1 sec\
   puzzle30.txt  30		  2 sec       < 1 sec\
   puzzle32.txt  32		  timed out    11 seconds\
   puzzle34.txt  34		  timed out	 15 seconds\
   puzzle36.txt  36           timed out	 51 seconds\
   puzzle38.txt  40??	       timed out	 139 seconds\
   puzzle40.txt  40           timed out	 59 seconds\
   puzzle42.txt  42           timed out	 84 seconds\
\
\
\
/******************************************************************************\
 *  If you wanted to solve random 4-by-4 or 5-by-5 puzzles, which\
 *  would you prefer: a faster computer (say, 2x as fast), more memory\
 *  (say 2x as much), a better priority queue (say, 2x as fast),\
 *  or a better priority function (say, one on the order of improvement\
 *  from Hamming to Manhattan)? Why?\
 *****************************************************************************/\
\
more memory\
\
\
\
\
/******************************************************************************\
 *  Known bugs / limitations.\
 *****************************************************************************/\
Difficulty running larger puzzles. Unable to figure out how to give Java more\
memory for the larger puzzles.\
\
\
/******************************************************************************\
 *  Describe whatever help (if any) that you received.\
 *  Don't include readings, lectures, and precepts, but do\
 *  include any help from people (including course staff, lab TAs,\
 *  classmates, and friends) and attribute them by name.\
 *****************************************************************************/\
\
\
\
\
\
/******************************************************************************\
 *  Describe any serious problems you encountered.                    \
 *****************************************************************************/\
\
\
\
/******************************************************************************\
 *  If you worked with a partner, assert below that you followed\
 *  the protocol as described on the assignment page. Give one\
 *  sentence explaining what each of you contributed.\
 *****************************************************************************/\
We pair programmed for the whole project so we both contributed to the whole thing.\
\
\
/******************************************************************************\
 *  List any other comments here. Feel free to provide any feedback   \
 *  on how much you learned from doing the assignment, and whether    \
 *  you enjoyed doing it.                                             \
 *****************************************************************************/\
\
}